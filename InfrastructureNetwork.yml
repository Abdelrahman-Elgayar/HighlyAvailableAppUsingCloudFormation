Description: This is Abdelrahman Alaa Eldeen preparing the networking infrastructure required to deploy a high availability web app using CloudFormation.

Parameters:
  EnvironmentName:
    Type: String
  vpcCidr:
    Type: String
    Default: 10.0.0.0/16
  PubSub1CIDR:
    Type: String
    Default: 10.0.0.0/24
  PubSub2CIDR:
    Type: String
    Default: 10.0.1.0/24
  PrivSub1CIDR:
    Type: String
    Default: 10.0.2.0/24
  PrivSub2CIDR:
    Type: String
    Default: 10.0.3.0/24

Resources:
  AbdelrahmanVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref vpcCidr
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  AbdelrahmanInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  AbdelrahmanIGWAttatchment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref AbdelrahmanInternetGateway
      VpcId: !Ref AbdelrahmanVPC
  PrivateSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivSub1CIDR
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
  PrivateSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivSub2CIDR
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PubSub1CIDR
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
  PublicSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PubSub2CIDR
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
  NatGW1ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: AbdelrahmanIGWAttatchment
    Properties: 
        Domain: vpc
  NatGW2ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: AbdelrahmanIGWAttatchment
    Properties:
        Domain: vpc
  NatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties: 
        AllocationId: !GetAtt NatGW1ElasticIP.AllocationId
        SubnetId: !Ref PublicSubnet1
  NatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NatGW2ElasticIP.AllocationId
        SubnetId: !Ref PublicSubnet2
  RouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Route
  IGWPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AbdelrahmanIGWAttatchment
    Properties:
      RouteTableId: !Ref RouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref AbdelrahmanInternetGateway
  PublicSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref PublicSubnet2
  PrivRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Route (AZ1)
  NATGWPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  PrivateSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AbdelrahmanVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Route (AZ2)
  NATGWPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  PrivateSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivRouteTable2
      SubnetId: !Ref PrivateSubnet2

Outputs:
  AbdelrahmanVPC:
    Value: !Ref AbdelrahmanVPC
    Export:
      Name: !Sub ${EnvironmentName}-VPC
  RouteTable1:
    Value: !Ref RouteTable1
    Export:
      Name: !Sub ${EnvironmentName}-PubRT
  PrivRouteTable1:
    Value: !Ref PrivRouteTable1
    Export:
      Name: !Sub ${EnvironmentName}-PrivRT1
  PrivRouteTable2:
    Value: !Ref PrivRouteTable2
    Export:
      Name: !Sub ${EnvironmentName}-PrivRT2
  PublicSubnets:
    Description: A list containing our two public subnets
    Value: !Join [",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PubSubnetList
  PrivateSubnets:
    Description: A list containing our two private subnets
    Value: !Join [",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PrivSubnetList
  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PubSub1
  PublicSubnet2: 
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PubSub2
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PrivSub1

  PrivateSubnet2: 
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PrivSub2


 

  
